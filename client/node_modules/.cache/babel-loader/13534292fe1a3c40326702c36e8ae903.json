{"ast":null,"code":"import _regeneratorRuntime from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { LOGIN, LOGOUT, FETCH_GAMES } from \"./types\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    localStorage.setItem(\"token\", user.token);\n    dispatch({\n      type: LOGIN,\n      payload: user\n    });\n  };\n};\nexport var logout = function logout() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: LOGOUT,\n                  payload: {\n                    logged: false,\n                    user: {}\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchGames = function fetchGames(_ref2) {\n  var token = _ref2.token;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios({\n                  method: \"POST\",\n                  url: \"/api/games\",\n                  headers: {\n                    authorization: token\n                  }\n                });\n\n              case 2:\n                res = _context2.sent;\n                dispatch({\n                  type: FETCH_GAMES,\n                  payload: res.data.games\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/actions/index.js"],"names":["axios","LOGIN","LOGOUT","FETCH_GAMES","login","user","dispatch","localStorage","setItem","token","type","payload","logout","logged","fetchGames","method","url","headers","authorization","res","data","games"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,SAA3C;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACvCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET,KAAR;AAAeU,MAAAA,OAAO,EAAEN;AAAxB,KAAD,CAAR;AACD,GAHwB;AAAA,CAAlB;AAKP,OAAO,IAAMO,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AAC1BA,gBAAAA,QAAQ,CAAC;AAAEI,kBAAAA,IAAI,EAAER,MAAR;AAAgBS,kBAAAA,OAAO,EAAE;AAAEE,oBAAAA,MAAM,EAAE,KAAV;AAAiBR,oBAAAA,IAAI,EAAE;AAAvB;AAAzB,iBAAD,CAAR;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAIP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAe,kBAAMH,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACrBN,KAAK,CAAC;AACtBe,kBAAAA,MAAM,EAAE,MADc;AAEtBC,kBAAAA,GAAG,EAAE,YAFiB;AAGtBC,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,aAAa,EAAET;AADR;AAHa,iBAAD,CADgB;;AAAA;AACjCU,gBAAAA,GADiC;AAQvCb,gBAAAA,QAAQ,CAAC;AAAEI,kBAAAA,IAAI,EAAEP,WAAR;AAAqBQ,kBAAAA,OAAO,EAAEQ,GAAG,CAACC,IAAJ,CAASC;AAAvC,iBAAD,CAAR;;AARuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\nimport { LOGIN, LOGOUT, FETCH_GAMES } from \"./types\";\n\nexport const login = user => dispatch => {\n  localStorage.setItem(\"token\", user.token);\n  dispatch({ type: LOGIN, payload: user });\n};\n\nexport const logout = () => async dispatch => {\n  dispatch({ type: LOGOUT, payload: { logged: false, user: {} } });\n};\n\nexport const fetchGames = ({ token }) => async dispatch => {\n  const res = await axios({\n    method: \"POST\",\n    url: \"/api/games\",\n    headers: {\n      authorization: token\n    }\n  });\n  dispatch({ type: FETCH_GAMES, payload: res.data.games });\n};\n"]},"metadata":{},"sourceType":"module"}