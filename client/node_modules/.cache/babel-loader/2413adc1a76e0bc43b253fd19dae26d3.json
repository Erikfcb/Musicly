{"ast":null,"code":"import _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js\";\n// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = localStorage.getItem(\"token\");\n      this.props.fetchGames({\n        id: token\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.games);\n      var games = {\n        guessTheNote: {\n          title: \"GuessTheNote\",\n          description: \"\",\n          progress: this.props.games.guessTheNote.correct * 100 / this.props.games.guessTheNote.try\n        },\n        intervals: {\n          title: \"Intervals\",\n          description: \"\",\n          progress: this.props.games.intervals.correct * 100 / this.props.games.intervals.try\n        },\n        melody: {\n          title: \"Melody\",\n          description: \"\",\n          progress: this.props.games.melody.correct * 100 / this.props.games.melody.try\n        },\n        chords: {\n          title: \"Chords\",\n          description: \"\",\n          progress: this.props.games.chords.correct * 100 / this.props.games.chords.try\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Game, {\n        game: games.guessTheNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.intervals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.melody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.chords,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var games = _ref.games;\n  // to be able to use this.props.auth\n  return {\n    games: games\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js"],"names":["React","Component","GuessTheNote","Game","connect","actions","Dashboard","token","localStorage","getItem","props","fetchGames","id","console","log","games","guessTheNote","title","description","progress","correct","try","intervals","melody","chords","mapStateToProps"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,WAAKC,KAAL,CAAWC,UAAX,CAAsB;AACpBC,QAAAA,EAAE,EAAEL;AADgB,OAAtB;AAGD;;;6BAEQ;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,UAAMA,KAAK,GAAG;AACZC,QAAAA,YAAY,EAAE;AACZC,UAAAA,KAAK,EAAE,cADK;AAEZC,UAAAA,WAAW,EAAE,EAFD;AAGZC,UAAAA,QAAQ,EACL,KAAKT,KAAL,CAAWK,KAAX,CAAiBC,YAAjB,CAA8BI,OAA9B,GAAwC,GAAzC,GACA,KAAKV,KAAL,CAAWK,KAAX,CAAiBC,YAAjB,CAA8BK;AALpB,SADF;AAQZC,QAAAA,SAAS,EAAE;AACTL,UAAAA,KAAK,EAAE,WADE;AAETC,UAAAA,WAAW,EAAE,EAFJ;AAGTC,UAAAA,QAAQ,EACL,KAAKT,KAAL,CAAWK,KAAX,CAAiBO,SAAjB,CAA2BF,OAA3B,GAAqC,GAAtC,GACA,KAAKV,KAAL,CAAWK,KAAX,CAAiBO,SAAjB,CAA2BD;AALpB,SARC;AAeZE,QAAAA,MAAM,EAAE;AACNN,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,WAAW,EAAE,EAFP;AAGNC,UAAAA,QAAQ,EACL,KAAKT,KAAL,CAAWK,KAAX,CAAiBQ,MAAjB,CAAwBH,OAAxB,GAAkC,GAAnC,GAA0C,KAAKV,KAAL,CAAWK,KAAX,CAAiBQ,MAAjB,CAAwBF;AAJ9D,SAfI;AAqBZG,QAAAA,MAAM,EAAE;AACNP,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,WAAW,EAAE,EAFP;AAGNC,UAAAA,QAAQ,EACL,KAAKT,KAAL,CAAWK,KAAX,CAAiBS,MAAjB,CAAwBJ,OAAxB,GAAkC,GAAnC,GAA0C,KAAKV,KAAL,CAAWK,KAAX,CAAiBS,MAAjB,CAAwBH;AAJ9D;AArBI,OAAd;AA4BA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEN,KAAK,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,KAAK,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEP,KAAK,CAACQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAER,KAAK,CAACS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA/CqBvB,S;;AAkDxB,SAASwB,eAAT,OAAoC;AAAA,MAATV,KAAS,QAATA,KAAS;AAClC;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD;;AAED,eAAeX,OAAO,CACpBqB,eADoB,EAEpBpB,OAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    this.props.fetchGames({\n      id: token\n    });\n  }\n\n  render() {\n    console.log(this.props.games);\n    const games = {\n      guessTheNote: {\n        title: \"GuessTheNote\",\n        description: \"\",\n        progress:\n          (this.props.games.guessTheNote.correct * 100) /\n          this.props.games.guessTheNote.try\n      },\n      intervals: {\n        title: \"Intervals\",\n        description: \"\",\n        progress:\n          (this.props.games.intervals.correct * 100) /\n          this.props.games.intervals.try\n      },\n      melody: {\n        title: \"Melody\",\n        description: \"\",\n        progress:\n          (this.props.games.melody.correct * 100) / this.props.games.melody.try\n      },\n      chords: {\n        title: \"Chords\",\n        description: \"\",\n        progress:\n          (this.props.games.chords.correct * 100) / this.props.games.chords.try\n      }\n    };\n    return (\n      <div className=\"dashboard\">\n        <Game game={games.guessTheNote} />\n        <Game game={games.intervals} />\n        <Game game={games.melody} />\n        <Game game={games.chords} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ games }) {\n  // to be able to use this.props.auth\n  return { games };\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}