{"ast":null,"code":"import _regeneratorRuntime from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js\";\n// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      console.log(\"first thing in didmount\");\n      var token = localStorage.getItem(\"token\");\n\n      var fetchG =\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this.props.fetchGames({\n                    id: token\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function fetchG() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      fetchG();\n      console.log(this.props.games);\n    } // renderGames() {\n    //   return {\n    //     // first this.props.games. is undefined thats why the error\n    //     guessTheNote: {\n    //       title: \"GuessTheNote\",\n    //       description: \"\",\n    //       progress:\n    //         (this.props.games.guessTheNote.correct * 100) /\n    //         this.props.games.guessTheNote.tries\n    //     },\n    //     intervals: {\n    //       title: \"Intervals\",\n    //       description: \"\",\n    //       progress:\n    //         (this.props.games.intervals.correct * 100) /\n    //         this.props.games.intervals.tries\n    //     },\n    //     melody: {\n    //       title: \"Melody\",\n    //       description: \"\",\n    //       progress:\n    //         (this.props.games.melody.correct * 100) /\n    //         this.props.games.melody.tries\n    //     },\n    //     chords: {\n    //       title: \"Chords\",\n    //       description: \"\",\n    //       progress:\n    //         (this.props.games.chords.correct * 100) /\n    //         this.props.games.chords.tries\n    //     }\n    //   };\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"first thing in render\"); // console.log(this.props.games);\n\n      var games = {};\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Game, {\n        game: games.guessTheNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.intervals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.melody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.chords,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref2) {\n  var games = _ref2.games;\n  // to be able to use this.props.auth\n  return {\n    games: games\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js"],"names":["React","Component","GuessTheNote","Game","connect","actions","Dashboard","console","log","token","localStorage","getItem","fetchG","props","fetchGames","id","games","guessTheNote","intervals","melody","chords","mapStateToProps"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAAA;;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,UAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACP,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsB;AAC1BC,oBAAAA,EAAE,EAAEN;AADsB,mBAAtB,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAANG,MAAM;AAAA;AAAA;AAAA,SAAZ;;AAKAA,MAAAA,MAAM;AACNL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAWG,KAAvB;AACD,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACPT,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EADO,CAEP;;AACA,UAAMQ,KAAK,GAAG,EAAd;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,KAAK,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,KAAK,CAACE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,KAAK,CAACG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEH,KAAK,CAACI,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA3DqBnB,S;;AA8DxB,SAASoB,eAAT,QAAoC;AAAA,MAATL,KAAS,SAATA,KAAS;AAClC;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD;;AAED,eAAeZ,OAAO,CACpBiB,eADoB,EAEpBhB,OAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    console.log(\"first thing in didmount\");\n\n    const token = localStorage.getItem(\"token\");\n    const fetchG = async () => {\n      await this.props.fetchGames({\n        id: token\n      });\n    };\n    fetchG();\n    console.log(this.props.games);\n  }\n  // renderGames() {\n  //   return {\n  //     // first this.props.games. is undefined thats why the error\n  //     guessTheNote: {\n  //       title: \"GuessTheNote\",\n  //       description: \"\",\n  //       progress:\n  //         (this.props.games.guessTheNote.correct * 100) /\n  //         this.props.games.guessTheNote.tries\n  //     },\n  //     intervals: {\n  //       title: \"Intervals\",\n  //       description: \"\",\n  //       progress:\n  //         (this.props.games.intervals.correct * 100) /\n  //         this.props.games.intervals.tries\n  //     },\n  //     melody: {\n  //       title: \"Melody\",\n  //       description: \"\",\n  //       progress:\n  //         (this.props.games.melody.correct * 100) /\n  //         this.props.games.melody.tries\n  //     },\n  //     chords: {\n  //       title: \"Chords\",\n  //       description: \"\",\n  //       progress:\n  //         (this.props.games.chords.correct * 100) /\n  //         this.props.games.chords.tries\n  //     }\n  //   };\n  // }\n\n  render() {\n    console.log(\"first thing in render\");\n    // console.log(this.props.games);\n    const games = {};\n    return (\n      <div className=\"dashboard\">\n        <Game game={games.guessTheNote} />\n        <Game game={games.intervals} />\n        <Game game={games.melody} />\n        <Game game={games.chords} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ games }) {\n  // to be able to use this.props.auth\n  return { games };\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}