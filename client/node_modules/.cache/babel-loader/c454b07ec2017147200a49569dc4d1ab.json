{"ast":null,"code":"import _defineProperty from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nvar Intervals =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Intervals, _Component);\n\n  function Intervals(props) {\n    var _this;\n\n    _classCallCheck(this, Intervals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Intervals).call(this, props));\n    _this.state = {\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    _this.difficulty = _this.difficulty.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.change = _this.change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newInterval = _this.newInterval.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Intervals, [{\n    key: \"change\",\n    value: function change(name, correct) {\n      if (!correct) {\n        axios.post(\"/api/updateProgress\", {\n          game: \"guessTheNote\",\n          correct: false,\n          id: localStorage.getItem(\"token\"),\n          level: this.state.difficulty\n        });\n        this.setState(_defineProperty({}, name, \"red\"));\n      }\n\n      if (correct) {\n        axios.post(\"/api/updateProgress\", {\n          game: \"guessTheNote\",\n          correct: true,\n          id: localStorage.getItem(\"token\"),\n          level: this.state.difficulty\n        });\n        this.setState(_defineProperty({}, name, \"green\"));\n      }\n    }\n  }, {\n    key: \"newInterval\",\n    value: function newInterval(diff) {\n      var level = diff.toLowerCase();\n      var intervalIndex = Math.floor(Math.random() * intervals[level].length);\n      var answer = intervals[level][intervalIndex].answer;\n      var pairIndex = Math.floor(Math.random() * intervals[level][intervalIndex].sounds.length);\n      localStorage.setItem(\"intervalAnswer\", answer);\n      localStorage.setItem(\"firstOfPair\", intervals[level][intervalIndex].sounds[pairIndex][0]);\n      localStorage.setItem(\"secondOfPair\", intervals[level][intervalIndex].sounds[pairIndex][1]);\n      var pair = [localStorage.getItem(\"firstOfPair\"), localStorage.getItem(\"secondOfPair\")];\n      var interval = {\n        answer: localStorage.getItem(\"intervalAnswer\"),\n        pair: pair\n      };\n      console.log(interval);\n    }\n  }, {\n    key: \"difficulty\",\n    value: function difficulty(e) {\n      this.setState({\n        difficulty: e.target.id,\n        newSound: true,\n        second: \"blue\",\n        third: \"blue\",\n        fifth: \"blue\",\n        seventh: \"blue\",\n        octave: \"blue\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var level = this.state.difficulty == 2 ? \"Medium\" : this.state.difficulty == 3 ? \"Hard\" : \"Easy\";\n\n      if (answer == null || this.state.newSound === true) {\n        this.newInterval(level);\n        this.setState({\n          newSound: false\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"intervals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"This is the Intervals game!\", React.createElement(\"p\", {\n        style: {\n          color: \"teal\",\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: \"difficulties\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"1\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Easy\"), React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"2\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"3\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Hard\")));\n    }\n  }]);\n\n  return Intervals;\n}(Component);\n\nexport default Intervals;","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js"],"names":["React","Component","axios","octaves","all","intervals","Intervals","props","state","newSound","difficulty","second","third","fifth","seventh","octave","bind","change","newInterval","name","correct","post","game","id","localStorage","getItem","level","setState","diff","toLowerCase","intervalIndex","Math","floor","random","length","answer","pairIndex","sounds","setItem","pair","interval","console","log","e","target","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nclass Intervals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    this.difficulty = this.difficulty.bind(this);\n    this.change = this.change.bind(this);\n    this.newInterval = this.newInterval.bind(this);\n  }\n\n  change(name, correct) {\n    if (!correct) {\n      axios.post(\"/api/updateProgress\", {\n        game: \"guessTheNote\",\n        correct: false,\n        id: localStorage.getItem(\"token\"),\n        level: this.state.difficulty\n      });\n      this.setState({ [name]: \"red\" });\n    }\n\n    if (correct) {\n      axios.post(\"/api/updateProgress\", {\n        game: \"guessTheNote\",\n        correct: true,\n        id: localStorage.getItem(\"token\"),\n        level: this.state.difficulty\n      });\n      this.setState({ [name]: \"green\" });\n    }\n  }\n\n  newInterval(diff) {\n    const level = diff.toLowerCase();\n    const intervalIndex = Math.floor(Math.random() * intervals[level].length);\n    const answer = intervals[level][intervalIndex].answer;\n    const pairIndex = Math.floor(\n      Math.random() * intervals[level][intervalIndex].sounds.length\n    );\n    localStorage.setItem(\"intervalAnswer\", answer);\n    localStorage.setItem(\n      \"firstOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][0]\n    );\n    localStorage.setItem(\n      \"secondOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][1]\n    );\n\n    const pair = [\n      localStorage.getItem(\"firstOfPair\"),\n      localStorage.getItem(\"secondOfPair\")\n    ];\n\n    const interval = {answer: localStorage.getItem(\"intervalAnswer\"), pair: pair};\n    console.log(interval);\n  }\n\n  difficulty(e) {\n    this.setState({\n      difficulty: e.target.id,\n      newSound: true,\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    });\n  }\n\n  render() {\n    const level =\n      this.state.difficulty == 2\n        ? \"Medium\"\n        : this.state.difficulty == 3\n        ? \"Hard\"\n        : \"Easy\";\n        if (answer == null || this.state.newSound === true) {\n          this.newInterval(level);\n\n          this.setState({ newSound: false });\n        }\n    return (\n      <div className=\"intervals\">\n        This is the Intervals game!\n        <p style={{ color: \"teal\", fontSize: \"1.5em\" }}>Level: {level}</p>\n        <div className=\"difficulties\">\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"1\"\n            onClick={this.difficulty}\n          >\n            Easy\n          </button>\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"2\"\n            onClick={this.difficulty}\n          >\n            Medium\n          </button>\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"3\"\n            onClick={this.difficulty}\n          >\n            Hard\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Intervals;\n"]},"metadata":{},"sourceType":"module"}