{"ast":null,"code":"import _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js\";\n// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = localStorage.getItem(\"token\");\n    }\n  }, {\n    key: \"renderGames\",\n    value: function renderGames() {\n      if (this.props.games !== {}) return {\n        // first this.props.games. is undefined thats why the error\n        guessTheNote: {\n          title: \"GuessTheNote\",\n          description: \"\",\n          progress: this.props.games.guessTheNote.correct * 100 / this.props.games.guessTheNote.tries\n        },\n        intervals: {\n          title: \"Intervals\",\n          description: \"\",\n          progress: this.props.games.intervals.correct * 100 / this.props.games.intervals.tries\n        },\n        melody: {\n          title: \"Melody\",\n          description: \"\",\n          progress: this.props.games.melody.correct * 100 / this.props.games.melody.tries\n        },\n        chords: {\n          title: \"Chords\",\n          description: \"\",\n          progress: this.props.games.chords.correct * 100 / this.props.games.chords.tries\n        }\n      };else return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.games);\n      var games = this.renderGames;\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Game, {\n        game: games.guessTheNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.intervals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.melody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Game, {\n        game: games.chords,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var games = _ref.games;\n  // to be able to use this.props.auth\n  return {\n    games: games\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js"],"names":["React","Component","GuessTheNote","Game","connect","actions","Dashboard","token","localStorage","getItem","props","games","guessTheNote","title","description","progress","correct","tries","intervals","melody","chords","console","log","renderGames","mapStateToProps"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAED;;;kCACa;AACZ,UAAG,KAAKC,KAAL,CAAWC,KAAX,KAAqB,EAAxB,EACA,OAAO;AACL;AACAC,QAAAA,YAAY,EAAE;AACZC,UAAAA,KAAK,EAAE,cADK;AAEZC,UAAAA,WAAW,EAAE,EAFD;AAGZC,UAAAA,QAAQ,EACL,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,YAAjB,CAA8BI,OAA9B,GAAwC,GAAzC,GACA,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,YAAjB,CAA8BK;AALpB,SAFT;AASLC,QAAAA,SAAS,EAAE;AACTL,UAAAA,KAAK,EAAE,WADE;AAETC,UAAAA,WAAW,EAAE,EAFJ;AAGTC,UAAAA,QAAQ,EACL,KAAKL,KAAL,CAAWC,KAAX,CAAiBO,SAAjB,CAA2BF,OAA3B,GAAqC,GAAtC,GACA,KAAKN,KAAL,CAAWC,KAAX,CAAiBO,SAAjB,CAA2BD;AALpB,SATN;AAgBLE,QAAAA,MAAM,EAAE;AACNN,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,WAAW,EAAE,EAFP;AAGNC,UAAAA,QAAQ,EACL,KAAKL,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAwBH,OAAxB,GAAkC,GAAnC,GACA,KAAKN,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAwBF;AALpB,SAhBH;AAuBLG,QAAAA,MAAM,EAAE;AACNP,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,WAAW,EAAE,EAFP;AAGNC,UAAAA,QAAQ,EACL,KAAKL,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBJ,OAAxB,GAAkC,GAAnC,GACA,KAAKN,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBH;AALpB;AAvBH,OAAP,CADA,KAgCK,OAAO,EAAP;AAGN;;;6BAEQ;AACPI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAvB;AACA,UAAMA,KAAK,GAAG,KAAKY,WAAnB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEZ,KAAK,CAACC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,KAAK,CAACO,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEP,KAAK,CAACQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAER,KAAK,CAACS,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EAtDqBnB,S;;AAyDxB,SAASuB,eAAT,OAAoC;AAAA,MAATb,KAAS,QAATA,KAAS;AAClC;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD;;AAED,eAAeP,OAAO,CACpBoB,eADoB,EAEpBnB,OAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n  }\n  renderGames() {\n    if(this.props.games !== {})\n    return {\n      // first this.props.games. is undefined thats why the error\n      guessTheNote: {\n        title: \"GuessTheNote\",\n        description: \"\",\n        progress:\n          (this.props.games.guessTheNote.correct * 100) /\n          this.props.games.guessTheNote.tries\n      },\n      intervals: {\n        title: \"Intervals\",\n        description: \"\",\n        progress:\n          (this.props.games.intervals.correct * 100) /\n          this.props.games.intervals.tries\n      },\n      melody: {\n        title: \"Melody\",\n        description: \"\",\n        progress:\n          (this.props.games.melody.correct * 100) /\n          this.props.games.melody.tries\n      },\n      chords: {\n        title: \"Chords\",\n        description: \"\",\n        progress:\n          (this.props.games.chords.correct * 100) /\n          this.props.games.chords.tries\n      }\n    };\n    else return {\n\n    };\n  }\n\n  render() {\n    console.log(this.props.games);\n    const games = this.renderGames;\n    return (\n      <div className=\"dashboard\">\n        <Game game={games.guessTheNote} />\n        <Game game={games.intervals} />\n        <Game game={games.melody} />\n        <Game game={games.chords} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ games }) {\n  // to be able to use this.props.auth\n  return { games };\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}