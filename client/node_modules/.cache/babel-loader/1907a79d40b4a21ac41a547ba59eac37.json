{"ast":null,"code":"import _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\n// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = localStorage.getItem(\"token\");\n      this.props.fetchGames({\n        id: token\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.games);\n      var games = {}; //     if (this.props.games !== undefined) {\n      //       games = {\n      //         // first this.props.games. is undefined thats why the error\n      //         guessTheNote: {\n      //           title: \"GuessTheNote\",\n      //           description: \"\",\n      //           progress:\n      //             (this.props.games.guessTheNote.correct * 100) /\n      //             this.props.games.guessTheNote.tries\n      //         },\n      //         intervals: {\n      //           title: \"Intervals\",\n      //           description: \"\",\n      //           progress:\n      //             (this.props.games.intervals.correct * 100) /\n      //             this.props.games.intervals.tries\n      //         },\n      //         melody: {\n      //           title: \"Melody\",\n      //           description: \"\",\n      //           progress:\n      //             (this.props.games.melody.correct * 100) /\n      //             this.props.games.melody.tries\n      //         },\n      //         chords: {\n      //           title: \"Chords\",\n      //           description: \"\",\n      //           progress:\n      //             (this.props.games.chords.correct * 100) /\n      //             this.props.games.chords.tries\n      //         }\n      //       };\n      //     }\n      //     return (\n      //       <div className=\"dashboard\">\n      //         <Game game={games.guessTheNote} />\n      //         <Game game={games.intervals} />\n      //         <Game game={games.melody} />\n      //         <Game game={games.chords} />\n      //       </div>\n      //     );\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nfunction mapStateToProps(_ref) {\n  var games = _ref.games;\n  // to be able to use this.props.auth\n  return {\n    games: games\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/Dashboard.js"],"names":["React","Component","GuessTheNote","Game","connect","actions","Dashboard","token","localStorage","getItem","props","fetchGames","id","console","log","games","mapStateToProps"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,WAAKC,KAAL,CAAWC,UAAX,CAAsB;AACpBC,QAAAA,EAAE,EAAEL;AADgB,OAAtB;AAGD;;;6BAEQ;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAvB;AACA,UAAIA,KAAK,GAAG,EAAZ,CAFO,CAGX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;;;;EArDqBd,S;;AAwDxB,SAASe,eAAT,OAAoC;AAAA,MAATD,KAAS,QAATA,KAAS;AAClC;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD;;AAED,eAAeX,OAAO,CACpBY,eADoB,EAEpBX,OAFoB,CAAP,CAGbC,SAHa,CAAf","sourcesContent":["// going to show games\nimport React, { Component } from \"react\";\nimport GuessTheNote from \"./games/GuessTheNote\";\nimport Game from \"./Game\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    this.props.fetchGames({\n      id: token\n    });\n  }\n\n  render() {\n    console.log(this.props.games);\n    let games = {};\n//     if (this.props.games !== undefined) {\n//       games = {\n//         // first this.props.games. is undefined thats why the error\n//         guessTheNote: {\n//           title: \"GuessTheNote\",\n//           description: \"\",\n//           progress:\n//             (this.props.games.guessTheNote.correct * 100) /\n//             this.props.games.guessTheNote.tries\n//         },\n//         intervals: {\n//           title: \"Intervals\",\n//           description: \"\",\n//           progress:\n//             (this.props.games.intervals.correct * 100) /\n//             this.props.games.intervals.tries\n//         },\n//         melody: {\n//           title: \"Melody\",\n//           description: \"\",\n//           progress:\n//             (this.props.games.melody.correct * 100) /\n//             this.props.games.melody.tries\n//         },\n//         chords: {\n//           title: \"Chords\",\n//           description: \"\",\n//           progress:\n//             (this.props.games.chords.correct * 100) /\n//             this.props.games.chords.tries\n//         }\n//       };\n//     }\n//     return (\n//       <div className=\"dashboard\">\n//         <Game game={games.guessTheNote} />\n//         <Game game={games.intervals} />\n//         <Game game={games.melody} />\n//         <Game game={games.chords} />\n//       </div>\n//     );\n  }\n}\n\nfunction mapStateToProps({ games }) {\n  // to be able to use this.props.auth\n  return { games };\n}\n\nexport default connect(\n  mapStateToProps,\n  actions\n)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}