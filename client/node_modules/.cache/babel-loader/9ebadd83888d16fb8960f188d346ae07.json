{"ast":null,"code":"import _regeneratorRuntime from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nvar Intervals =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Intervals, _Component);\n\n  function Intervals(props) {\n    var _this;\n\n    _classCallCheck(this, Intervals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Intervals).call(this, props));\n    _this.state = {\n      rerender: false,\n      progress: 0,\n      correct: 0,\n      tries: 0,\n      interval: {},\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    _this.difficulty = _this.difficulty.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.change = _this.change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newInterval = _this.newInterval.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playQuestion = _this.playQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getProgress = _this.getProgress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkAnswer = _this.checkAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.clearColors = _this.clearColors.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Intervals, [{\n    key: \"change\",\n    value: function change(name, correct) {\n      var _this2 = this;\n\n      var level = this.state.difficulty == 2 ? \"Medium\" : this.state.difficulty == 3 ? \"Hard\" : \"Easy\";\n\n      if (!correct) {\n        axios({\n          method: 'POST',\n          url: \"/api/updateProgress\",\n          data: {\n            game: \"intervals\",\n            correct: false,\n            level: level\n          },\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        setTimeout(function () {\n          _this2.setState({\n            rerender: !_this2.state.rernder\n          });\n        }, 500);\n        this.setState(_defineProperty({}, name, \"red\"));\n      }\n\n      if (correct) {\n        axios({\n          method: 'POST',\n          url: \"/api/updateProgress\",\n          data: {\n            game: \"intervals\",\n            correct: true,\n            level: level\n          },\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        this.newInterval(level);\n        this.setState(_defineProperty({}, name, \"green\"));\n      }\n    }\n  }, {\n    key: \"clearColors\",\n    value: function clearColors() {\n      this.setState({\n        second: \"blue\",\n        third: \"blue\",\n        fifth: \"blue\",\n        seventh: \"blue\",\n        octave: \"blue\"\n      });\n    }\n  }, {\n    key: \"checkAnswer\",\n    value: function checkAnswer(answer) {\n      var _this3 = this;\n\n      if (answer === this.state.interval.answer) {\n        this.change(answer, true);\n        setTimeout(function () {\n          _this3.clearColors();\n\n          _this3.playQuestion();\n        }, 1000);\n      }\n\n      if (answer !== this.state.interval.answer) this.change(answer, false);\n    }\n  }, {\n    key: \"newInterval\",\n    value: function newInterval(diff) {\n      var level = diff.toLowerCase();\n      var intervalIndex = Math.floor(Math.random() * intervals[level].length);\n      var answer = intervals[level][intervalIndex].answer;\n      var pairIndex = Math.floor(Math.random() * intervals[level][intervalIndex].sounds.length);\n      localStorage.setItem(\"intervalAnswer\", answer);\n      localStorage.setItem(\"firstOfPair\", intervals[level][intervalIndex].sounds[pairIndex][0]);\n      localStorage.setItem(\"secondOfPair\", intervals[level][intervalIndex].sounds[pairIndex][1]);\n      var pair = [localStorage.getItem(\"firstOfPair\"), localStorage.getItem(\"secondOfPair\")];\n      var interval = {\n        answer: localStorage.getItem(\"intervalAnswer\"),\n        pair: pair\n      };\n      this.setState({\n        interval: interval\n      });\n    }\n  }, {\n    key: \"difficulty\",\n    value: function difficulty(e) {\n      this.clearColors();\n      this.setState({\n        difficulty: e.target.id,\n        newSound: true\n      });\n    }\n  }, {\n    key: \"playQuestion\",\n    value: function playQuestion() {\n      var first = new Audio(this.state.interval.pair[0]);\n      var second = new Audio(this.state.interval.pair[1]);\n      first.play();\n      setTimeout(function () {\n        second.play();\n      }, 1000);\n    }\n  }, {\n    key: \"getProgress\",\n    value: function () {\n      var _getProgress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(level) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"/api/progress\", {\n                  level: level,\n                  id: localStorage.getItem(\"token\"),\n                  game: \"intervals\"\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.tries !== this.state.tries) {\n                  this.setState({\n                    progress: res.data.progress,\n                    tries: res.data.tries,\n                    correct: res.data.correct\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProgress(_x) {\n        return _getProgress.apply(this, arguments);\n      }\n\n      return getProgress;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var level = this.state.difficulty == 2 ? \"Medium\" : this.state.difficulty == 3 ? \"Hard\" : \"Easy\";\n      this.getProgress(level);\n\n      if (localStorage.getItem(\"intervalAnswer\") == null || this.state.newSound === true) {\n        this.newInterval(level);\n        this.setState({\n          newSound: false\n        });\n      }\n\n      var types = this.state.difficulty == 3 ? [{\n        answer: \"second\",\n        title: \"Major 2nd\"\n      }, {\n        answer: \"third\",\n        title: \"Major 3nd\"\n      }, {\n        answer: \"fifth\",\n        title: \"Perfect 5th\"\n      }, {\n        answer: \"seventh\",\n        title: \"Major 7th\"\n      }, {\n        answer: \"octave\",\n        title: \"Octave\"\n      }] : this.state.difficulty == 2 ? [{\n        answer: \"second\",\n        title: \"Major 2nd\"\n      }, {\n        answer: \"third\",\n        title: \"Major 3nd\"\n      }, {\n        answer: \"fifth\",\n        title: \"Perfect 5th\"\n      }, {\n        answer: \"octave\",\n        title: \"Octave\"\n      }] : [{\n        answer: \"third\",\n        title: \"Major 3nd\"\n      }, {\n        answer: \"fifth\",\n        title: \"Perfect 5th\"\n      }, {\n        answer: \"octave\",\n        title: \"Octave\"\n      }];\n      var buttons = types.map(function (type) {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this4.checkAnswer(type.answer);\n          },\n          className: \"btn interval  waves-light \" + _this4.state[type.answer],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, type.title);\n      });\n      var precentage = this.state.progress + \"%\";\n      return React.createElement(\"div\", {\n        className: \"intervals container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.playQuestion,\n        className: \"btn green sound  waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Play\"), React.createElement(\"p\", {\n        style: {\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Click \\\"Play\\\" to hear the interval\"), React.createElement(\"p\", {\n        style: {\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Progress: (\", this.state.correct, \"/\", this.state.tries, \")\", \" \", Math.floor(this.state.progress), \"%\"), React.createElement(\"div\", {\n        class: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"determinate\",\n        style: {\n          width: precentage\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"answers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, buttons), React.createElement(\"p\", {\n        style: {\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Click the correct interval.\"), React.createElement(\"p\", {\n        style: {\n          color: \"teal\",\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: \"difficulties\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn  waves-light\",\n        id: \"1\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Easy\"), React.createElement(\"button\", {\n        className: \"btn  waves-light\",\n        id: \"2\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"button\", {\n        className: \"btn  waves-light\",\n        id: \"3\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Hard\")));\n    }\n  }]);\n\n  return Intervals;\n}(Component);\n\nexport default Intervals;","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js"],"names":["React","Component","axios","octaves","all","intervals","Intervals","props","state","rerender","progress","correct","tries","interval","newSound","difficulty","second","third","fifth","seventh","octave","bind","change","newInterval","playQuestion","getProgress","checkAnswer","clearColors","name","level","method","url","data","game","headers","localStorage","getItem","setTimeout","setState","rernder","answer","diff","toLowerCase","intervalIndex","Math","floor","random","length","pairIndex","sounds","setItem","pair","e","target","id","first","Audio","play","post","res","types","title","buttons","map","type","precentage","fontSize","width","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nclass Intervals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rerender: false,\n      progress: 0,\n      correct: 0,\n      tries: 0,\n      interval: {},\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    this.difficulty = this.difficulty.bind(this);\n    this.change = this.change.bind(this);\n    this.newInterval = this.newInterval.bind(this);\n    this.playQuestion = this.playQuestion.bind(this);\n    this.getProgress = this.getProgress.bind(this);\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.clearColors = this.clearColors.bind(this);\n  }\n\n  change(name, correct) {\n    const level =\n      this.state.difficulty == 2\n        ? \"Medium\"\n        : this.state.difficulty == 3\n        ? \"Hard\"\n        : \"Easy\";\n    if (!correct) {\n      axios({\n        method: 'POST',\n        url: \"/api/updateProgress\",\n        data: {\n          game: \"intervals\",\n          correct: false,\n          level: level\n        },\n        headers: {\n          'authorization': localStorage.getItem('token')\n        }\n      });\n      setTimeout(() => {\n        this.setState({ rerender: !this.state.rernder });\n      }, 500);\n      this.setState({\n        [name]: \"red\"\n      });\n    }\n\n    if (correct) {\n      axios({\n        method: 'POST',\n        url: \"/api/updateProgress\",\n        data: {\n          game: \"intervals\",\n          correct: true,\n          level: level\n        },\n        headers: {\n          'authorization': localStorage.getItem('token')\n        }\n      });\n      this.newInterval(level);\n      this.setState({\n        [name]: \"green\"\n      });\n    }\n  }\n\n  clearColors() {\n    this.setState({\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    });\n  }\n\n  checkAnswer(answer) {\n    if (answer === this.state.interval.answer) {\n      this.change(answer, true);\n      setTimeout(() => {\n        this.clearColors();\n        this.playQuestion();\n      }, 1000);\n    }\n    if (answer !== this.state.interval.answer) this.change(answer, false);\n  }\n\n  newInterval(diff) {\n    const level = diff.toLowerCase();\n    const intervalIndex = Math.floor(Math.random() * intervals[level].length);\n    const answer = intervals[level][intervalIndex].answer;\n    const pairIndex = Math.floor(\n      Math.random() * intervals[level][intervalIndex].sounds.length\n    );\n    localStorage.setItem(\"intervalAnswer\", answer);\n    localStorage.setItem(\n      \"firstOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][0]\n    );\n    localStorage.setItem(\n      \"secondOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][1]\n    );\n\n    const pair = [\n      localStorage.getItem(\"firstOfPair\"),\n      localStorage.getItem(\"secondOfPair\")\n    ];\n\n    const interval = {\n      answer: localStorage.getItem(\"intervalAnswer\"),\n      pair: pair\n    };\n    this.setState({ interval: interval });\n  }\n\n  difficulty(e) {\n    this.clearColors();\n    this.setState({\n      difficulty: e.target.id,\n      newSound: true\n    });\n  }\n\n  playQuestion() {\n    const first = new Audio(this.state.interval.pair[0]);\n    const second = new Audio(this.state.interval.pair[1]);\n    first.play();\n    setTimeout(() => {\n      second.play();\n    }, 1000);\n  }\n  async getProgress(level) {\n    const res = await axios.post(\"/api/progress\", {\n      level: level,\n      id: localStorage.getItem(\"token\"),\n      game: \"intervals\"\n    });\n\n    if (res.data.tries !== this.state.tries) {\n      this.setState({\n        progress: res.data.progress,\n        tries: res.data.tries,\n        correct: res.data.correct\n      });\n    }\n  }\n\n  render() {\n    const level =\n      this.state.difficulty == 2\n        ? \"Medium\"\n        : this.state.difficulty == 3\n        ? \"Hard\"\n        : \"Easy\";\n    this.getProgress(level);\n    if (\n      localStorage.getItem(\"intervalAnswer\") == null ||\n      this.state.newSound === true\n    ) {\n      this.newInterval(level);\n      this.setState({ newSound: false });\n    }\n\n    const types =\n      this.state.difficulty == 3\n        ? [\n            { answer: \"second\", title: \"Major 2nd\" },\n            { answer: \"third\", title: \"Major 3nd\" },\n            { answer: \"fifth\", title: \"Perfect 5th\" },\n            { answer: \"seventh\", title: \"Major 7th\" },\n            { answer: \"octave\", title: \"Octave\" }\n          ]\n        : this.state.difficulty == 2\n        ? [\n            { answer: \"second\", title: \"Major 2nd\" },\n            { answer: \"third\", title: \"Major 3nd\" },\n            { answer: \"fifth\", title: \"Perfect 5th\" },\n            { answer: \"octave\", title: \"Octave\" }\n          ]\n        : [\n            { answer: \"third\", title: \"Major 3nd\" },\n            { answer: \"fifth\", title: \"Perfect 5th\" },\n            { answer: \"octave\", title: \"Octave\" }\n          ];\n\n    const buttons = types.map(type => {\n      return (\n        <button\n          onClick={() => this.checkAnswer(type.answer)}\n          className={\"btn interval  waves-light \" + this.state[type.answer]}\n        >\n          {type.title}\n        </button>\n      );\n    });\n\n    const precentage = this.state.progress + \"%\";\n\n    return (\n      <div className=\"intervals container\">\n        <div className=\"question\">\n          <button\n            onClick={this.playQuestion}\n            className=\"btn green sound  waves-light\"\n          >\n            Play\n          </button>\n          <p style={{ fontSize: \"1.5em\" }}>Click \"Play\" to hear the interval</p>\n\n          <p style={{ fontSize: \"1.5em\" }}>\n            Progress: ({this.state.correct}/{this.state.tries}){\" \"}\n            {Math.floor(this.state.progress)}%\n          </p>\n          <div class=\"progress\">\n            <div class=\"determinate\" style={{ width: precentage }} />\n          </div>\n        </div>\n        <div className=\"answers\">{buttons}</div>\n        <p style={{ fontSize: \"1.5em\" }}>Click the correct interval.</p>\n        <p style={{ color: \"teal\", fontSize: \"1.5em\" }}>Level: {level}</p>\n\n        <div className=\"difficulties\">\n          <button className=\"btn  waves-light\" id=\"1\" onClick={this.difficulty}>\n            Easy\n          </button>\n          <button className=\"btn  waves-light\" id=\"2\" onClick={this.difficulty}>\n            Medium\n          </button>\n          <button className=\"btn  waves-light\" id=\"3\" onClick={this.difficulty}>\n            Hard\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Intervals;\n"]},"metadata":{},"sourceType":"module"}