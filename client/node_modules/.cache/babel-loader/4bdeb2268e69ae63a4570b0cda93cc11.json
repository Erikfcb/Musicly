{"ast":null,"code":"import _regeneratorRuntime from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nvar Intervals =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Intervals, _Component);\n\n  function Intervals(props) {\n    var _this;\n\n    _classCallCheck(this, Intervals);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Intervals).call(this, props));\n    _this.state = {\n      progress: 0,\n      correct: 0,\n      tries: 0,\n      interval: {},\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    _this.difficulty = _this.difficulty.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.change = _this.change.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newInterval = _this.newInterval.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playQuestion = _this.playQuestion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getProgress = _this.getProgress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Intervals, [{\n    key: \"change\",\n    value: function change(name, correct) {\n      if (!correct) {\n        axios.post(\"/api/updateProgress\", {\n          game: \"guessTheNote\",\n          correct: false,\n          id: localStorage.getItem(\"token\"),\n          level: this.state.difficulty\n        });\n        this.setState(_defineProperty({}, name, \"red\"));\n      }\n\n      if (correct) {\n        axios.post(\"/api/updateProgress\", {\n          game: \"guessTheNote\",\n          correct: true,\n          id: localStorage.getItem(\"token\"),\n          level: this.state.difficulty\n        });\n        this.setState(_defineProperty({}, name, \"green\"));\n      }\n    }\n  }, {\n    key: \"newInterval\",\n    value: function newInterval(diff) {\n      var level = diff.toLowerCase();\n      var intervalIndex = Math.floor(Math.random() * intervals[level].length);\n      var answer = intervals[level][intervalIndex].answer;\n      var pairIndex = Math.floor(Math.random() * intervals[level][intervalIndex].sounds.length);\n      localStorage.setItem(\"intervalAnswer\", answer);\n      localStorage.setItem(\"firstOfPair\", intervals[level][intervalIndex].sounds[pairIndex][0]);\n      localStorage.setItem(\"secondOfPair\", intervals[level][intervalIndex].sounds[pairIndex][1]);\n      var pair = [localStorage.getItem(\"firstOfPair\"), localStorage.getItem(\"secondOfPair\")];\n      var interval = {\n        answer: localStorage.getItem(\"intervalAnswer\"),\n        pair: pair\n      };\n      this.setState({\n        interval: interval\n      });\n    }\n  }, {\n    key: \"difficulty\",\n    value: function difficulty(e) {\n      this.setState({\n        difficulty: e.target.id,\n        newSound: true,\n        second: \"blue\",\n        third: \"blue\",\n        fifth: \"blue\",\n        seventh: \"blue\",\n        octave: \"blue\"\n      });\n    }\n  }, {\n    key: \"playQuestion\",\n    value: function playQuestion() {\n      var first = new Audio(this.state.interval.pair[0]);\n      var second = new Audio(this.state.interval.pair[1]);\n      first.play();\n      setTimeout(function () {\n        second.play();\n      }, 1000);\n    }\n  }, {\n    key: \"getProgress\",\n    value: function () {\n      var _getProgress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(level) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(\"/api/progress\", {\n                  level: level,\n                  id: localStorage.getItem(\"token\"),\n                  game: \"intervals\"\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.tries !== this.state.tries) {\n                  this.setState({\n                    progress: res.data.progress,\n                    tries: res.data.tries,\n                    correct: res.data.correct\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getProgress(_x) {\n        return _getProgress.apply(this, arguments);\n      }\n\n      return getProgress;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var level = this.state.difficulty == 2 ? \"Medium\" : this.state.difficulty == 3 ? \"Hard\" : \"Easy\";\n      this.getProgress(level);\n\n      if (localStorage.getItem(\"intervalAnswer\") == null || this.state.newSound === true) {\n        this.newInterval(level);\n        this.setState({\n          newSound: false\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"intervals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.playQuestion,\n        className: \"btn green sound waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Play\"), React.createElement(\"p\", {\n        style: {\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Click the button to hear again\"), React.createElement(\"p\", {\n        style: {\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Progress: (\", this.state.correct, \"/\", this.state.tries, \")\", Math.floor(this.state.progress), \"%\")), React.createElement(\"p\", {\n        style: {\n          color: \"teal\",\n          fontSize: \"1.5em\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Level: \", level), React.createElement(\"div\", {\n        className: \"difficulties\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"1\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Easy\"), React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"2\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Medium\"), React.createElement(\"button\", {\n        className: \"btn waves-effect waves-light\",\n        id: \"3\",\n        onClick: this.difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Hard\")));\n    }\n  }]);\n\n  return Intervals;\n}(Component);\n\nexport default Intervals;","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/Intervals.js"],"names":["React","Component","axios","octaves","all","intervals","Intervals","props","state","progress","correct","tries","interval","newSound","difficulty","second","third","fifth","seventh","octave","bind","change","newInterval","playQuestion","getProgress","name","post","game","id","localStorage","getItem","level","setState","diff","toLowerCase","intervalIndex","Math","floor","random","length","answer","pairIndex","sounds","setItem","pair","e","target","first","Audio","play","setTimeout","res","data","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { octaves, all, intervals } from \"../assets/notes/notes\";\nimport \"./Intervals.css\";\n\nclass Intervals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: 0,\n      correct: 0,\n      tries: 0,\n      interval: {},\n      newSound: true,\n      difficulty: \"1\",\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    };\n    this.difficulty = this.difficulty.bind(this);\n    this.change = this.change.bind(this);\n    this.newInterval = this.newInterval.bind(this);\n    this.playQuestion = this.playQuestion.bind(this);\n    this.getProgress = this.getProgress.bind(this);    \n  }\n\n  change(name, correct) {\n    if (!correct) {\n      axios.post(\"/api/updateProgress\", {\n        game: \"guessTheNote\",\n        correct: false,\n        id: localStorage.getItem(\"token\"),\n        level: this.state.difficulty\n      });\n      this.setState({ [name]: \"red\" });\n    }\n\n    if (correct) {\n      axios.post(\"/api/updateProgress\", {\n        game: \"guessTheNote\",\n        correct: true,\n        id: localStorage.getItem(\"token\"),\n        level: this.state.difficulty\n      });\n      this.setState({ [name]: \"green\" });\n    }\n  }\n\n  newInterval(diff) {\n    const level = diff.toLowerCase();\n    const intervalIndex = Math.floor(Math.random() * intervals[level].length);\n    const answer = intervals[level][intervalIndex].answer;\n    const pairIndex = Math.floor(\n      Math.random() * intervals[level][intervalIndex].sounds.length\n    );\n    localStorage.setItem(\"intervalAnswer\", answer);\n    localStorage.setItem(\n      \"firstOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][0]\n    );\n    localStorage.setItem(\n      \"secondOfPair\",\n      intervals[level][intervalIndex].sounds[pairIndex][1]\n    );\n\n    const pair = [\n      localStorage.getItem(\"firstOfPair\"),\n      localStorage.getItem(\"secondOfPair\")\n    ];\n\n    const interval = {\n      answer: localStorage.getItem(\"intervalAnswer\"),\n      pair: pair\n    };\n    this.setState({ interval: interval });\n  }\n\n  difficulty(e) {\n    this.setState({\n      difficulty: e.target.id,\n      newSound: true,\n      second: \"blue\",\n      third: \"blue\",\n      fifth: \"blue\",\n      seventh: \"blue\",\n      octave: \"blue\"\n    });\n  }\n\n  playQuestion() {\n    const first = new Audio(this.state.interval.pair[0]);\n    const second = new Audio(this.state.interval.pair[1]);\n    first.play();\n    setTimeout(() => {\n      second.play();\n    }, 1000);\n  }\n   async getProgress(level) {\n    const res = await axios.post(\"/api/progress\", {\n      level: level,\n      id: localStorage.getItem(\"token\"),\n      game: \"intervals\"\n    });\n\n    if (res.data.tries !== this.state.tries) {\n      this.setState({\n        progress: res.data.progress,\n        tries: res.data.tries,\n        correct: res.data.correct\n      });\n    }\n  };\n\n  render() {\n    const level =\n      this.state.difficulty == 2\n        ? \"Medium\"\n        : this.state.difficulty == 3\n        ? \"Hard\"\n        : \"Easy\";\n        this.getProgress(level)\n    if (\n      localStorage.getItem(\"intervalAnswer\") == null ||\n      this.state.newSound === true\n    ) {\n      this.newInterval(level);\n      this.setState({ newSound: false });\n    }\n    return (\n      <div className=\"intervals\">\n        <div className=\"question\">\n          <button\n            onClick={this.playQuestion}\n            className=\"btn green sound waves-effect waves-light\"\n          >\n            Play\n          </button>\n          <p style={{ fontSize: \"1.5em\" }}>Click the button to hear again</p>\n\n          <p style={{ fontSize: \"1.5em\" }}>\n            Progress: ({this.state.correct}/{this.state.tries})\n            {Math.floor(this.state.progress)}%\n          </p>\n        </div>\n        <p style={{ color: \"teal\", fontSize: \"1.5em\" }}>Level: {level}</p>\n        <div className=\"difficulties\">\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"1\"\n            onClick={this.difficulty}\n          >\n            Easy\n          </button>\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"2\"\n            onClick={this.difficulty}\n          >\n            Medium\n          </button>\n          <button\n            className=\"btn waves-effect waves-light\"\n            id=\"3\"\n            onClick={this.difficulty}\n          >\n            Hard\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Intervals;\n"]},"metadata":{},"sourceType":"module"}