{"ast":null,"code":"import _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/GuessTheNote.js\";\nimport React, { Component } from \"react\";\nimport { octaves, all } from \"../assets/notes/notes\";\nimport \"./GuessTheNote.css\";\n\nvar GuessTheNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GuessTheNote, _Component);\n\n  function GuessTheNote(props) {\n    var _this;\n\n    _classCallCheck(this, GuessTheNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GuessTheNote).call(this, props));\n    _this.state = {\n      clear: false,\n      question: all[Math.floor(Math.random() * all.length)],\n      answer: ''\n    };\n    return _this;\n  }\n\n  _createClass(GuessTheNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var playAnswer = function playAnswer(note) {\n        var audio = new Audio(note);\n        audio.play();\n      };\n\n      var playQuestion = function playQuestion(note) {\n        var audio = new Audio(note);\n        audio.play();\n      };\n\n      var buttons = octaves.c3.map(function (note) {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return playSound(note.sound);\n          },\n          className: \"btn blue sound waves-effect waves-light\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, note.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"guessTheNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return playQuestion(_this2.state.question.sound);\n        },\n        className: \"btn teal sound waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"?\"), React.createElement(\"p\", {\n        style: {\n          fontSize: '1.5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Click the \\\"?\\\" to hear again\")), React.createElement(\"div\", {\n        className: \"answers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, buttons), React.createElement(\"p\", {\n        style: {\n          fontSize: '1.5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Click the note that fits to the sound you just heard.\"));\n    }\n  }]);\n\n  return GuessTheNote;\n}(Component);\n\nexport default GuessTheNote;","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/games/GuessTheNote.js"],"names":["React","Component","octaves","all","GuessTheNote","props","state","clear","question","Math","floor","random","length","answer","playAnswer","note","audio","Audio","play","playQuestion","buttons","c3","map","playSound","sound","name","fontSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,uBAA7B;AACA,OAAO,oBAAP;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,QAAQ,EAAEL,GAAG,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,GAAG,CAACS,MAA7B,CAAD,CAFF;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAFiB;AAOlB;;;;6BACQ;AAAA;;AACP,UAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACzB,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAd;AACAC,QAAAA,KAAK,CAACE,IAAN;AACD,OAHD;;AAIA,UAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAJ,IAAI,EAAI;AAC3B,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAd;AACAC,QAAAA,KAAK,CAACE,IAAN;AACD,OAHD;;AAKA,UAAME,OAAO,GAAGlB,OAAO,CAACmB,EAAR,CAAWC,GAAX,CAAe,UAAAP,IAAI,EAAI;AACrC,eACE;AACE,UAAA,OAAO,EAAE;AAAA,mBAAMQ,SAAS,CAACR,IAAI,CAACS,KAAN,CAAf;AAAA,WADX;AAEE,UAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGT,IAAI,CAACU,IAJR,CADF;AAQD,OATe,CAAhB;AAWA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMN,YAAY,CAAC,MAAI,CAACb,KAAL,CAAWE,QAAX,CAAoBgB,KAArB,CAAlB;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAOE;AAAG,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAPF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BN,OAA1B,CAVF,EAWE;AAAG,QAAA,KAAK,EAAE;AAACM,UAAAA,QAAQ,EAAE;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAXF,CADF;AAgBD;;;;EA9CwBzB,S;;AAiD3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { octaves, all } from \"../assets/notes/notes\";\nimport \"./GuessTheNote.css\";\n\nclass GuessTheNote extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      clear: false,\n      question: all[Math.floor(Math.random()*all.length)],\n      answer: ''\n    }\n  }\n  render() {\n    const playAnswer = note => {\n      const audio = new Audio(note);\n      audio.play();\n    };\n    const playQuestion = note => {\n      const audio = new Audio(note);\n      audio.play();\n    };\n\n    const buttons = octaves.c3.map(note => {\n      return (\n        <button\n          onClick={() => playSound(note.sound)}\n          className=\"btn blue sound waves-effect waves-light\"\n        >\n          {note.name}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"guessTheNote\">\n        <div className=\"question\">\n          <button\n            onClick={() => playQuestion(this.state.question.sound)}\n            className=\"btn teal sound waves-effect waves-light\"\n          >\n            ?\n          </button>\n          <p style={{fontSize: '1.5em'}}>Click the \"?\" to hear again</p>\n        </div>\n        <div className=\"answers\">{buttons}</div>\n        <p style={{fontSize: '1.5em'}}>Click the note that fits to the sound you just heard.</p>\n        \n      </div>\n    );\n  }\n}\n\nexport default GuessTheNote;\n"]},"metadata":{},"sourceType":"module"}