{"ast":null,"code":"import _classCallCheck from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/GuessTheNote.js\";\nimport React, { Component } from \"react\";\nimport notes from '../notes/notes';\n\nvar GuessTheNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GuessTheNote, _Component);\n\n  function GuessTheNote() {\n    _classCallCheck(this, GuessTheNote);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GuessTheNote).apply(this, arguments));\n  }\n\n  _createClass(GuessTheNote, [{\n    key: \"render\",\n    value: function render() {\n      var playSound = function playSound(note) {\n        var audio = new Audio(note);\n        audio.play();\n      };\n\n      var notes = [{\n        name: \"C\",\n        sound: c\n      }, {\n        name: \"D\",\n        sound: d\n      }, {\n        name: \"E\",\n        sound: e\n      }, {\n        name: \"F\",\n        sound: f\n      }, {\n        name: \"G\",\n        sound: g\n      }, {\n        name: \"A\",\n        sound: a\n      }, {\n        name: \"B\",\n        sound: b\n      }].map(function (note) {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return playSound(note.sound);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \" \", note.name, \" \");\n      });\n      return React.createElement(\"div\", {\n        className: \"guessTheNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, notes);\n    }\n  }]);\n\n  return GuessTheNote;\n}(Component);\n\nexport default GuessTheNote;","map":{"version":3,"sources":["/Users/erikvardanyan/Desktop/Work/Web/Fullstack/Musicly/server/client/src/components/GuessTheNote.js"],"names":["React","Component","notes","GuessTheNote","playSound","note","audio","Audio","play","name","sound","c","d","e","f","g","a","b","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;IAEMC,Y;;;;;;;;;;;;;6BACK;AACP,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AACxB,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAAd;AACAC,QAAAA,KAAK,CAACE,IAAN;AACD,OAHD;;AAKA,UAAMN,KAAK,GAAG,CACZ;AAAEO,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEC;AAApB,OADY,EAEZ;AAAEF,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEE;AAApB,OAFY,EAGZ;AAAEH,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEG;AAApB,OAHY,EAIZ;AAAEJ,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEI;AAApB,OAJY,EAKZ;AAAEL,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEK;AAApB,OALY,EAMZ;AAAEN,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEM;AAApB,OANY,EAOZ;AAAEP,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,KAAK,EAAEO;AAApB,OAPY,EAQZC,GARY,CAQR,UAAAb,IAAI,EAAI;AACZ,eACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMD,SAAS,CAACC,IAAI,CAACK,KAAN,CAAf;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgDL,IAAI,CAACI,IAArD,MADF;AAGD,OAZa,CAAd;AAcA,aAAO;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BP,KAA/B,CAAP;AACD;;;;EAtBwBD,S;;AAyB3B,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport notes from '../notes/notes'\n\nclass GuessTheNote extends Component {\n  render() {\n    const playSound = note => {\n      const audio = new Audio(note);\n      audio.play();\n    };\n\n    const notes = [\n      { name: \"C\", sound: c },\n      { name: \"D\", sound: d },\n      { name: \"E\", sound: e },\n      { name: \"F\", sound: f },\n      { name: \"G\", sound: g },\n      { name: \"A\", sound: a },\n      { name: \"B\", sound: b }\n    ].map(note => {\n      return (\n        <button onClick={() => playSound(note.sound)}> {note.name} </button>\n      );\n    });\n\n    return <div className=\"guessTheNote\">{notes}</div>;\n  }\n}\n\nexport default GuessTheNote;\n"]},"metadata":{},"sourceType":"module"}